@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Container

Person(Customer, "Пользователь", "Пользователь приложения")

System_Ext(Browser, "Браузер", "Браузер в котором пользователь ведет работу")
System_Ext(WebApplication2, "Внешнее веб-приложение", "Позволяет расширить функциональность приложения")
System_Ext(ExtApi, "API для хранения ресурса", "Позволяет расширить функциональность приложения")    

System_Boundary(app, "App") {
    System(WebApplication1, "Веб-приложение",                "Позволяет пользователям сохранять ресурсы и управлять ими")
    System(Auth,            "Сервис авторизации",            "Производит авторизацию и аутентификацию пользователей")
    System(FileSystem,      "Файловая система",              "Управляет файловой структурой")
    System(Extension,       "Расширение для браузера",       "Позволяет считывать открытые вкладки браузера")
    System(ApiService,      "Сервис API",                    "Принимает запросы из веб-приложений и вызывает нужные операции")
    System(Access,          "Сервис предоставления доступа", "Управляет доступами аккаунта к ресурсам")    
    System(Links,           "Сервис управления ссылками",    "Управляет ссылками")
    System(Folder,          "Сервис управления папками",     "Управляет папками")
    System(Proxy,           "Сервис интеграции",             "Перенаправляет запросы на другие сервисы, для расширения функциональности")
    System(IntegrationApi,  "Сервис API для интеграции",     "Получает запросы с внешнего сервиса и вызывает нужные операции")

    ContainerDb(DataBase1, "База данных 1", "PosqreSQL", "Хранит данные об аккаунтах и доступах")
    ContainerDb(DataBase2, "База данных 2", "Neo4j",     "Хранит данные о файловой структуре, папках и ссылках")
}

Rel(Customer, WebApplication1, "Сохраняет ресурсы")
Rel(Customer, WebApplication2, "Сохраняет ресурсы")

Rel(Customer, Browser, "Открывает и закрывает вкладки")

Rel_Right(WebApplication1, Extension, "Запрашивает открытые вкладки")
Rel(Extension, Browser, "Читает открытые вкладки")

Rel(WebApplication1, ApiService, "Отправляет запросы")
Rel(WebApplication2, ApiService, "Отправляет запросы")

Rel(ApiService, Auth, "Запрашивает авторизацию")
BiRel(ApiService, Access, "Проверяет и добавляет доступ у аккаунта к ресурсу")
Rel(ApiService, Proxy, "Отправляет запросы с внешних приложений")
BiRel(ApiService, FileSystem, "Запрашивает и изменяет файловую структуру")
Rel(ApiService, Links, "Запрашивает информацию о ссылках")
Rel(ApiService, Folder, "Запрашивает информацию о папках")

BiRel(Auth,   DataBase1, "Чтение и запись данных")
BiRel(Access, DataBase1, "Чтение и запись данных")

BiRel(FileSystem, DataBase2, "Чтение и запись данных")
BiRel(Links,      DataBase2, "Чтение и запись данных")
BiRel(Folder,     DataBase2, "Чтение и запись данных")

Rel(Proxy, ExtApi, "Отправляет запросы на внешнюю API")

Rel(ExtApi, IntegrationApi, "Отправляет запросы на регистрацию нового узла")

Rel(IntegrationApi, FileSystem, "Передает изменения")
Rel(IntegrationApi, Access, "Передает изменения")

@enduml 
